name: "Setup, Build, Test, and Deploy"

on:
  push:
    branches:
      - "feature/*"  # matches every branch containing 'feature/'
      - "bugfix/*"   # matches every branch containing 'bugfix/'
      - "hotfix/*"   # matches every branch containing 'hotfix/'
      - "!main"      # excludes the 'main' branch
  pull_request:
    branches: [main]
  release:
    types: [created]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]  

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -

    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create false  

    - name: Cache Poetry dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install dependencies with Poetry
      run: |
        poetry install

    - name: Run tests
      run: |
        poetry run pytest --doctest-modules --junitxml=junit/test-results.xml --cov=src/entity_recognition_service --cov-report=html --cov-report=xml

    - name: Upload JUnit Test Results
      uses: actions/upload-artifact@v4
      with:
        name: junit-test-results
        path: junit/test-results.xml

    - name: Upload HTML Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: html-coverage-report
        path: htmlcov/

    - name: Upload XML Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: xml-coverage-report
        path: coverage.xml

    - name: Build package with Poetry
      run: |
        poetry build


    - name: Publish package to PyPI
      if: github.ref == 'refs/heads/main'
      run: |
        poetry publish
      env:
        POETRY_HTTP_BASIC_PYPI_USERNAME: __token__
        POETRY_HTTP_BASIC_PYPI_PASSWORD: ${{ secrets.PYPI_API_KEY }}